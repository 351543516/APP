package com.xinghaogroup.health_app_server.config;

import javax.sql.DataSource;
import jakarta.persistence.EntityManagerFactory;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableTransactionManagement
@EnableJpaRepositories(
        basePackages = "com.xinghaogroup.health_app_server.repository.mysql",
        entityManagerFactoryRef = "anotherMysqlEntityManagerFactory",
        transactionManagerRef = "anotherMysqlTransactionManager"
)
public class MysqlConfig {

    @Bean(name = "anotherMysqlDataSource")
    @ConfigurationProperties(prefix = "spring.datasource")
    public DataSource anotherMysqlDataSource() {
        return DataSourceBuilder.create().build();
    }

    @Bean(name = "anotherMysqlEntityManagerFactory")
    public LocalContainerEntityManagerFactoryBean anotherMysqlEntityManagerFactory(
            @Qualifier("anotherMysqlDataSource") DataSource dataSource) {
        LocalContainerEntityManagerFactoryBean em = new LocalContainerEntityManagerFactoryBean();
        em.setDataSource(dataSource);
        em.setPackagesToScan("com.xinghaogroup.health_app_server.entity");
        em.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        return em;
    }

    @Bean(name = "anotherMysqlTransactionManager")
    public PlatformTransactionManager anotherMysqlTransactionManager(
            @Qualifier("anotherMysqlEntityManagerFactory") EntityManagerFactory entityManagerFactory) {
        return new JpaTransactionManager(entityManagerFactory);
    }
}